<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://blog.teopeurt.com/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 02 Mar 2016 17:30:47 +0100</lastBuildDate>
    <atom:link href="http://blog.teopeurt.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>About</title>
      <link>http://blog.teopeurt.com/about/</link>
      <pubDate>Wed, 02 Mar 2016 17:30:47 +0100</pubDate>
      
      <guid>http://blog.teopeurt.com/about/</guid>
      <description>&lt;p&gt;I do data, I do software, I do open-source, I love building
distributed, connected services, hack embedded devices and mobile
development.
I also write software for mobiles, and try to make Web services
&amp;ldquo;reactive&amp;rdquo;. I am also helping to build the open Web.&lt;/p&gt;

&lt;p&gt;In my past life I used to work with software in high performance cars
&lt;a href=&#34;http://www.astonmartin.com/&#34;&gt;here&lt;/a&gt;,
&lt;a href=&#34;http://www.jaguar.com/gb/en/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;http://www.bmw.com/&#34;&gt;here&lt;/a&gt;,
racing cars &lt;a href=&#34;http://www.mclaren.com/home/&#34;&gt;here&lt;/a&gt;, regular cars
&lt;a href=&#34;http://www.ford.co.uk/&#34;&gt;here&lt;/a&gt;, now I work with High Performance
Computers.&lt;/p&gt;

&lt;p&gt;I tried to do something totally different in
&lt;a href=&#34;http://en.wikipedia.org/wiki/Computational_finance&#34;&gt;Computational Finance&lt;/a&gt;,
realised that most of the theory was based on dodgy application of
Physics, so decided to fund and do my own research into analysing risk
and capital markets - similar in vein to
&lt;a href=&#34;http://www.amazon.com/The-behavior-Markets-Benoit-Mandelbrot/dp/0465043550&#34;&gt;Mandelbroit&lt;/a&gt;.
I am due to launch a product which demonstrates and blows Portfolio
Theory out of the water.&lt;/p&gt;

&lt;p&gt;I am highly opinionated and think Africa&amp;rsquo;s internet rate
penetration/adoption is NOT going quick enough. I intend to change
that hence why I support projects like the
&lt;a href=&#34;http://villagetelco.org&#34;&gt;Village Telco&lt;/a&gt;. Unfortunately the stumbling
block is not technical.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apple&#39;s New Programming Language Swift</title>
      <link>http://blog.teopeurt.com/2014/06/04/apples-new-programming-language-swift/</link>
      <pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2014/06/04/apples-new-programming-language-swift/</guid>
      <description>&lt;p&gt;Apple has just released a brand new programming language, I wont go
into any of the details as better men have already evaluated it.&lt;/p&gt;

&lt;p&gt;My excitement is not on the language itself but rather the suite of
tools that comes with it. Quoting directly from the release notes.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Interactive.&lt;/strong&gt; Use Swift interactively to experiment with your ideas
and see instant results.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Unified.&lt;/strong&gt; A complete replacement for both the C and Objective-C
languages. Swift provides full object-oriented features, and
includes low-level language primitives such as types, flow control,
and operators&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Playgrounds.&lt;/strong&gt; Playgrounds make writing Swift code productive and
easy. Type a line of code, and the result appears immediately.
If your code runs over time—for instance through a loop—you can add
that line of code to the Timeline Assistant to watch it progress.
Display variables in a graph, inspect each step of drawing a view, or
watch an animated Sprite&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Kit scene.&lt;/strong&gt; When you’ve perfected your code in the playground, simply
move that code into your project. Some uses for playgrounds include:
Designing a new algorithm, watching its results every step of the way
Experimenting with new API or trying out new Swift syntax Creating new
tests and then verifying that they work before promoting them into your test suite&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Learn in a playground&lt;/strong&gt;. Open select documentation in a playground to
learn from the tutorial in an interactive environment. The
combination of richly formatted documentation and interactive
playground makes it easy to fully explore the API, changing and
experimenting with the sample code.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Read-eval-print loop (REPL) in LLDB.&lt;/strong&gt; The debugging console in Xcode
includes an interactive version of the Swift language built right in.
Use Swift syntax to evaluate and interact with your running app, or
write new code to see how it works in a script-like environment. REPL
is available from within the Xcode console, or using LLDB from within
Terminal.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The reason this excites me is that now I can use similar tools which exists for Scala and of which I enjoy especially as a learning tool.
The playground feature reminds me of &lt;a href=&#34;https://github.com/scala-ide/scala-worksheet/wiki/Getting-Started&#34;&gt;scala worksheet&lt;/a&gt; but more powerful. That warrants its own post by the way.
I believe in experimentation and breaking things in order to learn and Apple has just won a new fan in me.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Raspberry Pi</title>
      <link>http://blog.teopeurt.com/2014/04/24/raspberry-pi/</link>
      <pubDate>Thu, 24 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2014/04/24/raspberry-pi/</guid>
      <description>&lt;p&gt;As you may or may not know - I run &lt;a href=&#34;http://pigstycoders.com&#34;&gt;PigstyCoders&lt;/a&gt;. It is a small yet global boutique with clients across 4 continents and 10 countries. We love and are active in the  open-source community and give back whenever possible, either through hackathons, workshops and giveaways.&lt;/p&gt;

&lt;p&gt;I have always had a passion for Africa and it&amp;rsquo;s potential and I think Africa is the next frontier in the digital evolution, hence why  are doing our best to enable local expertise, through workshops and talks. We don&amp;rsquo;t just believe in copying over products from Europe and USA - but using our expertise to tailor the approach to the continent, especially those at the BOP.&lt;/p&gt;

&lt;p&gt;It sounds like a crazy plan but we are planning in giving away 100 Raspberry Pi&amp;rsquo;s across 10 African cities. Unlike other projects - this is not just a pump and dump mission. We are doing local workshops - backed with a live forum support and on-going discussion to help develop their skills further.&lt;/p&gt;

&lt;p&gt;Who knows what will happen - just like open-source software - we just want to put this out there and see what happens.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Git Arsenal</title>
      <link>http://blog.teopeurt.com/2014/03/09/my-git-arsenal/</link>
      <pubDate>Sun, 09 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2014/03/09/my-git-arsenal/</guid>
      <description>&lt;p&gt;I am a huge fan of &lt;a href=&#34;http://git-scm.com/&#34;&gt;Git&lt;/a&gt; and have been for many years. I tend to go through a lot of developer machines and thus will need to set up my dev environment really quickly - I only use Linux or Apple&amp;rsquo;s Mac so a shell script normally works for me. Two invaluable tools I have come to love over the years is &lt;a href=&#34;http://www.sourcetreeapp.com/&#34;&gt;SourceTree&lt;/a&gt; and &lt;a href=&#34;http://www.perforce.com/product/components/perforce-visual-merge-and-diff-tools&#34;&gt;P4Merge&lt;/a&gt; by Perforce. As an aside Perforce is actually a proprietary version control system used in Enterprise but P4Merge is a free tool.&lt;/p&gt;

&lt;p&gt;One of the things everyone encounters when using Git are merge conflicts and this is where a visual tool is invaluable. I hate having to learn a new tool as my attention span is very limited and thus P4Merge does it for me. YMMV.&lt;/p&gt;

&lt;p&gt;Sourcetree was an application originally developed for Mac OS X but was since acquired by Atlassian - owners of Bitbucket - so it has very good integration.&lt;/p&gt;

&lt;p&gt;Git itself has a major learning curve but the investment is very much worth it. My advice is to take baby steps and don&amp;rsquo;t try to get into the holy wars about branching models etc - e.g whether &lt;a href=&#34;http://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;git-flow&lt;/a&gt; is good for you or not.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile Development</title>
      <link>http://blog.teopeurt.com/2013/01/18/mobile-development/</link>
      <pubDate>Fri, 18 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2013/01/18/mobile-development/</guid>
      <description>&lt;p&gt;A workshop I gave on developing for Mobile and the strategy to take.&lt;/p&gt;

&lt;script 
    async class=&#34;speakerdeck-embed&#34; 
    data-id=&#34;3b7469c043c60130f33f1231381d4ca8&#34; 
    data-ratio=&#34;1.33333333333333&#34; 
    src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;
&lt;/script&gt;

&lt;p&gt;&lt;a href=&#34;https://speakerdeck.com/teopeurt/mobile-development-practical-introduction&#34;&gt;Mobile development&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The deck gives some very basic introduction.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rails - Efficiency in Production</title>
      <link>http://blog.teopeurt.com/2012/09/04/rails-efficiency-in-production/</link>
      <pubDate>Tue, 04 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2012/09/04/rails-efficiency-in-production/</guid>
      <description>&lt;p&gt;Rails Asset Pipeline - rails book&lt;/p&gt;

&lt;p&gt;Efficiency in Production&lt;/p&gt;

&lt;p&gt;One of the best things about the asset pipeline is that it automatically results in assets that are optimized to be efficient in a production application.
Traditional methods for organizing CSS and JavaScript involve splitting functionality into separate files and using nice formatting (with lots of indentation). While convenient for the programmer, this is inefficient in production; including multiple full-sized files can significantly slow page-load times (one of the most important factors affecting the quality of the user experience). With the asset pipeline, in production all the application stylesheets get rolled into one CSS file (application.css), all the application JavaScript code gets rolled into one JavaScript file (javascripts.js), and all such files (including those in lib/assets and vendor/assets) are minified to remove the unnecessary whitespace that bloats file size.&lt;/p&gt;

&lt;p&gt;As a result, we get the best of both worlds: multiple nicely formatted files for programmer convenience, with single optimized files in production.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DNS Service Providers</title>
      <link>http://blog.teopeurt.com/2012/09/03/dns-service-providers/</link>
      <pubDate>Mon, 03 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2012/09/03/dns-service-providers/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://aws.amazon.com/about-aws/whats-new/2010/12/06/announcing-amazon-route-53-dns-service/&#34;&gt;http://aws.amazon.com/about-aws/whats-new/2010/12/06/announcing-amazon-route-53-dns-service/&lt;/a&gt;
&lt;a href=&#34;https://dnsimple.com/domains/new&#34;&gt;https://dnsimple.com/domains/new&lt;/a&gt;
&lt;a href=&#34;http://www.nettica.com/Prices/Default.aspx&#34;&gt;http://www.nettica.com/Prices/Default.aspx&lt;/a&gt;
&lt;a href=&#34;http://www.dnsmadeeasy.com/&#34;&gt;http://www.dnsmadeeasy.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My features
Aname, CName, DynamicDNS, API, Cheap / 10s - 100s of domains, TTL (not that these are respected)
setup, docs,&lt;/p&gt;

&lt;p&gt;How do these Compare?&lt;/p&gt;

&lt;h2 id=&#34;background:b916e23542b710bc00816e34b241a592&#34;&gt;Background&lt;/h2&gt;

&lt;p&gt;Always used Linode DNS manager, but not suitable for everything - especially A-Name&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Making an EPUB Reader for Cocoa</title>
      <link>http://blog.teopeurt.com/2012/09/03/making-an-epub-reader-for-cocoa/</link>
      <pubDate>Mon, 03 Sep 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2012/09/03/making-an-epub-reader-for-cocoa/</guid>
      <description>&lt;p&gt;Source: &lt;a href=&#34;http://stackoverflow.com/questions/1388467/reading-epub-format&#34;&gt;http://stackoverflow.com/questions/1388467/reading-epub-format&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The EPUB format brings together a bunch of different specifications / formats:&lt;/p&gt;

&lt;p&gt;one to say what the content of the book should look like (a subset of XHTML 1.1 + CSS)
one to define a &amp;ldquo;manifest&amp;rdquo; that lists all of the files that make up that content (OPF, which is an XML file)
one to define how everything is packaged up (OEBPS: a zip file of everything in the manifest plus a few extra files)
The specs look a bit daunting but actually once you&amp;rsquo;ve got the basics (unzipping, parsing XML) down it&amp;rsquo;s not particularly difficult or complex.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll need to work out how to download the EPUB, to unzip it somewhere, to parse the manifest and then to display the relevant content.&lt;/p&gt;

&lt;p&gt;Some pointers if you&amp;rsquo;re just starting out:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;parse xml&lt;/li&gt;
&lt;li&gt;unzip&lt;/li&gt;
&lt;li&gt;To display content just use a UIWebView for now.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here&amp;rsquo;s a high level step by step for your code:&lt;/p&gt;

&lt;p&gt;1) create a view with a UIWebView&lt;/p&gt;

&lt;p&gt;2) download the EPUB file&lt;/p&gt;

&lt;p&gt;3) unzip it to a subdirectory in your app&amp;rsquo;s documents folder using the zip library, linked above&lt;/p&gt;

&lt;p&gt;4) parse the XML file at META-INF/container.xml (if this file doesn&amp;rsquo;t exist the EPUB is invalid) using TBXML, linked above&lt;/p&gt;

&lt;p&gt;5) In this XML, find the first &amp;ldquo;rootfile&amp;rdquo; with media-type application/oebps-package+xml. This is the OPF file for the book.&lt;/p&gt;

&lt;p&gt;6) parse the OPF file (also XML)&lt;/p&gt;

&lt;p&gt;7) now you need to know what the first chapter of the book is.&lt;/p&gt;

&lt;p&gt;a) each &lt;item&gt; in the &lt;manifest&gt; element has an id and an href. Store these in an NSDictionary where the key is the id and the object is the href.&lt;/p&gt;

&lt;p&gt;b) Look at the first &lt;itemref&gt; in the &lt;spine&gt;. It has an idref attribute which corresponds to one of the ids in (a). Look up that id in the NSDictionary and you&amp;rsquo;ll get an href.&lt;/p&gt;

&lt;p&gt;c) this is the the file of the first chapter to show the user. Work out what the full path is (hint: it&amp;rsquo;s wherever you unzipped the zip file to in (3) plus the base directory of the OPF file in (6))&lt;/p&gt;

&lt;p&gt;8) create an NSURL using fileURLWithPath:, where the path is the full path from (7c). Load this request using the UIWebView you created in (1).&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;ll need to implement forward / backward buttons or swipes or something so that users can move from one chapter to another. Use the &lt;spine&gt; to work out which file to show next - the &lt;itemrefs&gt; in the XML are in the order they should appear to the reader.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RBENV Keeping Things Local</title>
      <link>http://blog.teopeurt.com/2012/08/16/rben-keeping-things-local/</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2012/08/16/rben-keeping-things-local/</guid>
      <description>&lt;p&gt;The benefits of keeping things local,&lt;/p&gt;

&lt;p&gt;Working across machines- I have 4 physical machines I use daily and countless servers dotted around the world, I can never remember the shell commands for any particular project so I created build scripts.&lt;/p&gt;

&lt;p&gt;I always hated having to rebuild dev environments hence I loved RVM. The &lt;a href=&#34;https://github.com/sstephenson/rbenv/&#34;&gt;RBENV&lt;/a&gt; came along and I fell in love. Used in conjunction with a [Bundler][3] and &lt;code&gt;--path&lt;/code&gt; option, one can get a pretty awesome build going that is isolated and local just to that directory!&lt;/p&gt;

&lt;p&gt;[3]: &lt;a href=&#34;http://gembundler.com/&#34;&gt;http://gembundler.com/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is QT on Android?</title>
      <link>http://blog.teopeurt.com/2012/08/16/android-and-qt/</link>
      <pubDate>Thu, 16 Aug 2012 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2012/08/16/android-and-qt/</guid>
      <description>&lt;p&gt;Do you want to port those brilliant Nokia applications and QT based apps to Android without rewriting your code or having to learn what a Java Interface is? Necessitas to the rescue! - though you still have to learn Java if you want to be serious on the Android, but I digress.&lt;/p&gt;

&lt;p&gt;Necessitas allows you port and write QT based applications for Android. For those who are familiar with QT - it is/was the best C++ framework ever invented - opinions clearly my own.&lt;/p&gt;

&lt;p&gt;Look &lt;a href=&#34;http://necessitas.kde.org/&#34;&gt;here&lt;/a&gt; for good introduction and the &lt;a href=&#34;http://community.kde.org/Necessitas&#34;&gt;community&lt;/a&gt; if you want to tinker.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Necessitas is a KDE community project aimed to provide an easy way to develop Qt apps on Android platform.
Necessitas comes from the need of exploiting the power and the multi-platform capabilities of the Qt  framework on the Android world. It was born as a concept work which demonstrates the flexibility of Qt and, today, strives to become a fully  working development solution for Android.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It was the brainchild of 31 year old Romanian Bogdan Vatra. He did an interview with &lt;a href=&#34;http://www.behindkde.org/node/925&#34;&gt;Behind KDE&lt;/a&gt;. His introduction to the Android platform SDK was similar to mine - doing custom Android builds on embedded devices, though mine was at TomTom and Renault. Here is an excerpt of how he started work on Necessitas.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;How old is the Qt on Android project?  Who started it?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I started to port Qt to Android at the end of 2009. When I started it the name was android-lighthouse but I had to change the name to &amp;ldquo;Necessitas&amp;rdquo; just before the SDK release because Nokia and Google didn&amp;rsquo;t allow me to use Qt and/or Android words.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://labs.qt.nokia.com/&#34;&gt;Lighthouse&lt;/a&gt;, a research project started by Nokia, helped me a lot. This project made my life very easy, the changes I had to make were only a small set of changes into the Qt tree. The &amp;ldquo;biggest change&amp;rdquo; was to add another shared memory implementation based on ashmem.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This post is part of a series of post on QT. I will actually go through the steps for creating an android application using the brilliant QT Quick and &lt;a href=&#34;http://qt.nokia.com/qtquick/&#34;&gt;QML&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Second System Effect - Thunderbird Woes</title>
      <link>http://blog.teopeurt.com/2011/11/09/the-second-system-effect-thunderbird-woes/</link>
      <pubDate>Wed, 09 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2011/11/09/the-second-system-effect-thunderbird-woes/</guid>
      <description>&lt;p&gt;My anecdotal evidence - Since 2005, there have been issues with Thunderbird speaking to IMAP servers, specifically saving messages to the sent folder. I assume there have been a bug filed for this but we are now in 2011 and this issue still exists in Thunderbird 7 - So much for progress.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Thunderbird Issue&#34; href=&#34;http://forums.mozillazine.org/viewtopic.php?t=218625&amp;amp;start=0.&#34; target=&#34;_blank&#34;&gt;Issue Discussion Here:&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I really hate it when people point me to forums, as a source of a solution - especially ones that are 12 pages long! If you do not want to help, then don&amp;rsquo;t reply! You do have a choice.&lt;/p&gt;

&lt;p&gt;Anyway this reminds me of the highly charged jwz, who says it much better than me - even gave it a cool name -  &lt;a title=&#34;CADT&#34; href=&#34;http://www.jwz.org/doc/cadt.html&#34;&gt;CADT&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Note that he was referring to Gnome 1 and 2, and now we have the monstrosity that is Gnome 3! So much for progress!&lt;/p&gt;

&lt;p&gt;To al who says Google is your friend - the account settings are no longer under &amp;lsquo;Tools&amp;rsquo;
they are now under &amp;lsquo;Edit&amp;rsquo;.&lt;/p&gt;

&lt;p&gt;Basically there are 2 things to do -&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Reduce server connections cache to 1.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In &amp;lsquo;copies and folders&amp;rsquo; under &amp;lsquo;Account Settings&amp;rsquo;, uncheck the box to automatically place copies in &amp;lsquo;local&amp;rsquo; folders, rather have them stored in the server. The way IMAP works, you will still get these in your folders - go figure. Until they fix this issue, we will still have this problem!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Only link I found that gave me an idea on the folder thingy was by &lt;a title=&#34;Dr Nabeel&#34; href=&#34;http://nabtron.com/thunderbird-stuck-on-copying-message-to-sent-folder-solved-on-mac-osx/2909/&#34; target=&#34;_blank&#34;&gt;Dr Nabeel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The reason for this post title? &lt;a title=&#34;second system effect&#34; href=&#34;The second-system effect refers to the tendency of small, elegant, and successful systems to have elephantine, feature-laden monstrosities as their successors. &#34;&gt;Wikipedia&lt;/a&gt; is your friend!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Do Not Equate To Skill</title>
      <link>http://blog.teopeurt.com/2011/11/07/do-not-equate-to-skill-what-can-easily-be-attributed-to-luck/</link>
      <pubDate>Mon, 07 Nov 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2011/11/07/do-not-equate-to-skill-what-can-easily-be-attributed-to-luck/</guid>
      <description>&lt;p&gt;A post on a post about a post. How many layers of abstraction? Reminds me of paper money!&lt;/p&gt;

&lt;p&gt;Do not really like linking to other posts - but this hits the nail on the head. The so called masters of the universe have no idea luck and serendipity plays such an important role in their &amp;lsquo;achievements&amp;rsquo;. Much better analysis than can be done by me.&lt;/p&gt;

&lt;p&gt;Excellent post by Fred Dustin on &lt;a href=&#34;http://freddestin.com/2011/11/ows-2-hubris-in-the-face-of-risk-and-a-culture-of-entitlement.html&#34;&gt;hubris&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RIP Dennis..</title>
      <link>http://blog.teopeurt.com/2011/10/13/rip-dennis/</link>
      <pubDate>Thu, 13 Oct 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2011/10/13/rip-dennis/</guid>
      <description>&lt;p&gt;A great &lt;a title=&#34;Dennis&#34; href=&#34;http://en.wikipedia.org/wiki/Dennis_Ritchie&#34; target=&#34;_blank&#34;&gt;man&lt;/a&gt; passed today. Unassuming and truly a legend, at least in my eyes.&lt;/p&gt;

&lt;p&gt;If you haven&amp;rsquo;t read it - go buy it now! Once you can program in C - you can do anything.&lt;/p&gt;

&lt;p&gt;&lt;a title=&#34;Ansi C&#34; href=&#34;http://www.amazon.com/Programming-Language-2nd-Brian-Kernighan/dp/0131103628&#34;&gt;The C Programming Language.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to BackUp</title>
      <link>http://blog.teopeurt.com/2011/09/15/how-to-backup/</link>
      <pubDate>Thu, 15 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2011/09/15/how-to-backup/</guid>
      <description>&lt;p&gt;Don&amp;rsquo;t break what works - this constant to re-invent the wheel! sheesh&lt;/p&gt;

&lt;p&gt;is Emacs broken, is Gnutils?&lt;/p&gt;

&lt;p&gt;After reading the very unhelpful advice on &lt;a title=&#34;Ubuntu backup&#34; href=&#34;https://help.ubuntu.com/community/BackupYourSystem&#34;&gt;Ubuntu&lt;/a&gt; on how to backup - I have stolen the old notes from jwz.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.jwz.org/doc/backups.html&#34;&gt;http://www.jwz.org/doc/backups.html&lt;/a&gt;
&lt;ul&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;li&amp;gt;You have a computer. It came with a hard drive in it. Go buy two more drives of the same size or larger. If the drive in your computer is SATA2, get SATA2. If it&#39;s a 2.5&amp;quot; laptop drive, get two of those. Brand doesn&#39;t matter, but physical measurements and connectors should match.&amp;lt;/li&amp;gt;

&amp;lt;li&amp;gt;Get external enclosures for both of them. The enclosures are under $30.&amp;lt;/li&amp;gt;

&amp;lt;li&amp;gt;Put one of these drives in its enclosure on your desk. Name it something clever like &amp;quot;Backup&amp;quot;. If you are using a Mac, the command you use to back up is below, If you&#39;re using Linux, it&#39;s something a lot like that. If you&#39;re using Windows, go fuck yourself. &amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;sudo rsync -vaxAX --delete --ignore-errors / /Volumes/Backup/
&lt;/pre&gt;&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;&amp;lt;li&amp;gt;If you have a desktop computer, have this happen every morning at 5AM by creating a temporary text file containing this line:&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;0 5 * * * rsync -vaxAX --delete --ignore-errors / /Volumes/Backup/
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and then doing&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;sudo crontab -u root 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;that-file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;li&amp;gt;If you have a laptop, do that before you go to bed. Really. Every night when you plug your laptop in to charge.&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;If you&#39;re on a Mac, that backup drive will be &amp;lt;em&amp;gt;bootable.&amp;lt;/em&amp;gt; That means that when (WHEN) your internal drive scorches itself, you can just take your backup drive and put it in your computer and go. This is nice.&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;When (WHEN) your backup drive goes bad, which you will notice because your last backup failed, replace it immediately. This is your number one priority. Don&#39;t wait until the weekend when you have time, do it now, before you so much as &amp;lt;em&amp;gt;touch&amp;lt;/em&amp;gt; your computer again. Do it before goddamned breakfast. The universe tends toward maximum irony. Don&#39;t push it.&amp;lt;/li&amp;gt;
&amp;lt;li&amp;gt;That third drive? Do a backup onto it the same way, then take that to your office and lock it in a desk. Every few months, bring it home, do a backup, and immediately take it away again. This is your &amp;quot;my house burned down&amp;quot; backup.&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/ul&gt;
&lt;em&gt;&amp;ldquo;OMG, three drives is so expensive! That sounds like a hassle!&amp;rdquo;&lt;/em&gt; Shut up. I know things. You will listen to me. Do it anyway.&lt;/p&gt;

&lt;p&gt;Excellent advice!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unix Help For Users</title>
      <link>http://blog.teopeurt.com/2011/07/03/unix-help-for-users/</link>
      <pubDate>Sun, 03 Jul 2011 00:00:00 +0000</pubDate>
      
      <guid>http://blog.teopeurt.com/2011/07/03/unix-help-for-users/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://unixhelp.ed.ac.uk/&#34;&gt;http://unixhelp.ed.ac.uk/&lt;/a&gt;
Nuff Said.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>